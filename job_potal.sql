-- Tạo database
CREATE DATABASE IF NOT EXISTS job_portal_db;

-- Sử dụng database job_portal_db
USE job_portal_db;

-- Tạo bảng CITY
CREATE TABLE CITY (
    ID INT PRIMARY KEY AUTO_INCREMENT,
    CityName VARCHAR(45) NOT NULL
);


CREATE TABLE ROLE (
    ID INT PRIMARY KEY AUTO_INCREMENT,
    Name VARCHAR(20) UNIQUE NOT NULL
);

-- Tạo bảng User với khóa ngoại tới bảng Role
CREATE TABLE USER (
    ID INT PRIMARY KEY AUTO_INCREMENT,
    Username VARCHAR(45) UNIQUE NOT NULL,
    Password VARCHAR(200) NOT NULL,
    RegisterDate DATE NOT NULL,
    UserRole_ID INT,
    IsDeleted INT NOT NULL,
    FOREIGN KEY (UserRole_ID) REFERENCES Role(ID)
);
-- Tạo bảng COMPANY
CREATE TABLE COMPANY (
    ID INT PRIMARY KEY AUTO_INCREMENT,
    Name VARCHAR(100) NOT NULL,
    Address VARCHAR(100) NOT NULL,
    City_ID INT,
    Avatar VARCHAR(300) NOT NULL,
    Description VARCHAR(1000),
    Email VARCHAR(45) NOT NULL,
    Ischecked BOOLEAN NOT NULL DEFAULT 0,
    IsDeleted BOOLEAN NOT NULL DEFAULT 0,
    User_ID INT NOT NULL,
    FOREIGN KEY (User_ID) REFERENCES USER(ID),
    FOREIGN KEY (City_ID) REFERENCES CITY(ID)
);

-- Tạo bảng CANDIDATE
CREATE TABLE CANDIDATE (
    ID INT PRIMARY KEY AUTO_INCREMENT,
    Full_Name VARCHAR(100) NOT NULL,
    Email VARCHAR(100) NOT NULL,
    DateOfBirth DATE NOT NULL,
    City_ID INT,
    Avatar VARCHAR(300) NOT NULL,
    Description VARCHAR(500) NOT NULL,
    Phone VARCHAR(10) NOT NULL,
    Degree VARCHAR(45) NOT NULL,
    Major VARCHAR(45) NOT NULL,
    Sex VARCHAR(45) NOT NULL,
    User_ID INT NOT NULL,
    IsDeleted BOOLEAN NOT NULL DEFAULT 0,
    FOREIGN KEY (User_ID) REFERENCES USER(ID),
    FOREIGN KEY (City_ID) REFERENCES CITY(ID)
);

-- Tạo bảng ADMINISTRATOR
CREATE TABLE ADMINISTRATOR (
    ID INT PRIMARY KEY AUTO_INCREMENT,
    Full_Name VARCHAR(100) NOT NULL,
    Email VARCHAR(100) NOT NULL,
    IsDeleted BOOLEAN NOT NULL DEFAULT 0,
    User_ID INT NOT NULL,
    FOREIGN KEY (User_ID) REFERENCES USER(ID)
);
-- Tạo bảng CANDIDATE_COMPANY
CREATE TABLE CANDIDATE_COMPANY (
    ID INT PRIMARY KEY AUTO_INCREMENT,
    Candidate_ID INT,
    Company_ID INT,
    FOREIGN KEY (Candidate_ID) REFERENCES CANDIDATE(ID),
    FOREIGN KEY (Company_ID) REFERENCES COMPANY(ID)
);

-- Tạo bảng JOB
CREATE TABLE JOB (
    ID INT PRIMARY KEY AUTO_INCREMENT,
    Company_ID INT NOT NULL,
    Name VARCHAR(100) NOT NULL,
    Description VARCHAR(100) NOT NULL,
    SalaryFrom INT NOT NULL,
    SalaryTo INT NOT NULL,
    AgeFrom INT NOT NULL,
    AgeTo INT NOT NULL,
    EndDate DATE NOT NULL,
    CreateDate DATE NOT NULL,
    Quantity INT NOT NULL,
    IsChecked BOOLEAN NOT NULL,
    DegreeRequired VARCHAR(100) NOT NULL,
    IsDeleted BOOLEAN NOT NULL DEFAULT 0,
    SexRequired VARCHAR(100) NOT NULL,
    ProbationaryPriod INT NOT NULL,
    Benefit VARCHAR(100) NOT NULL,
    Position VARCHAR(100) NOT NULL,
    Type VARCHAR(100) NOT NULL,
    City_ID INT,
    Address VARCHAR(100) NOT NULL,
    ExperienceRequired INT NOT NULL,
    JobRequired VARCHAR(100) NOT NULL,
	Candidate_Company_ID INT NOT NULL,
	FOREIGN KEY (Candidate_Company_ID) REFERENCES CANDIDATE_COMPANY(ID),
    FOREIGN KEY (Company_ID) REFERENCES COMPANY(ID),
    FOREIGN KEY (City_ID) REFERENCES CITY(ID)
);

-- Tạo bảng MAJOR
CREATE TABLE MAJOR (
    ID INT PRIMARY KEY AUTO_INCREMENT,
    Name VARCHAR(100) NOT NULL
);

-- Tạo bảng JOB_MAJOR
CREATE TABLE JOB_MAJOR (
    ID INT PRIMARY KEY AUTO_INCREMENT,
    Job_ID INT NOT NULL,
    Major_ID INT NOT NULL,
    Point INT NOT NULL,
    FOREIGN KEY (Job_ID) REFERENCES JOB(ID),
    FOREIGN KEY (Major_ID) REFERENCES MAJOR(ID)
);

-- Tạo bảng CURRICULUM_VITAE
CREATE TABLE CURRICULUM_VITAE (
    ID INT PRIMARY KEY AUTO_INCREMENT,
    CareerGoals VARCHAR(100) NOT NULL,
    DegreeDetail VARCHAR(100) NOT NULL,
    ExperienceDetail VARCHAR(100) NOT NULL,
    Skill VARCHAR(100) NOT NULL,
    ForeignLanguage VARCHAR(100) NOT NULL,
    Candidate_ID INT NOT NULL,
    CV_Link VARCHAR(100) NOT NULL,
    Is_Deleted BOOLEAN NOT NULL DEFAULT 0,
    FOREIGN KEY (Candidate_ID) REFERENCES CANDIDATE(ID)
);

-- Tạo bảng CANDIDATE_JOB
CREATE TABLE CANDIDATE_JOB (
    ID INT PRIMARY KEY AUTO_INCREMENT,
    Candidate_ID INT,
    Job_ID INT,
    CV_ID INT,
    AppliedDate DATE,
    IsLiked BOOLEAN DEFAULT NULL,
    IsApplied BOOLEAN DEFAULT NULL,
    FOREIGN KEY (Candidate_ID) REFERENCES CANDIDATE(ID),
    FOREIGN KEY (Job_ID) REFERENCES JOB(ID),
    FOREIGN KEY (CV_ID) REFERENCES CURRICULUM_VITAE(ID)
);

-- Tạo bảng COMMENT
CREATE TABLE COMMENT (
    ID INT PRIMARY KEY AUTO_INCREMENT,
    Candidate_ID INT,
    Company_ID INT,
    Rating INT CHECK (Rating >= 0 AND Rating <= 5),
    Assessment VARCHAR(200) NOT NULL,
    CreatedDate DATE NOT NULL,
    FOREIGN KEY (Candidate_ID) REFERENCES CANDIDATE(ID),
    FOREIGN KEY (Company_ID) REFERENCES COMPANY(ID)
);


-- Tạo bảng CITY
CREATE TABLE CITY (
    ID INT PRIMARY KEY AUTO_INCREMENT,
    CityName VARCHAR(45) NOT NULL
);


CREATE TABLE ROLE (
    ID INT PRIMARY KEY AUTO_INCREMENT,
    Name VARCHAR(20) UNIQUE NOT NULL
);

-- Tạo bảng User với khóa ngoại tới bảng Role
CREATE TABLE USER (
    ID INT PRIMARY KEY AUTO_INCREMENT,
    Username VARCHAR(45) UNIQUE NOT NULL,
    Password VARCHAR(200) NOT NULL,
    RegisterDate DATE NOT NULL,
    UserRole_ID INT,
    IsDeleted INT NOT NULL,
    FOREIGN KEY (UserRole_ID) REFERENCES Role(ID)
);
-- Tạo bảng COMPANY
CREATE TABLE COMPANY (
    ID INT PRIMARY KEY AUTO_INCREMENT,
    Name VARCHAR(100) NOT NULL,
    Address VARCHAR(100) NOT NULL,
    City_ID INT,
    Avatar VARCHAR(300) NOT NULL,
    Description VARCHAR(1000),
    Email VARCHAR(45) NOT NULL,
    Ischecked BOOLEAN NOT NULL DEFAULT 0,
    IsDeleted BOOLEAN NOT NULL DEFAULT 0,
    User_ID INT NOT NULL,
    FOREIGN KEY (User_ID) REFERENCES USER(ID),
    FOREIGN KEY (City_ID) REFERENCES CITY(ID)
);

-- Tạo bảng CANDIDATE
CREATE TABLE CANDIDATE (
    ID INT PRIMARY KEY AUTO_INCREMENT,
    Full_Name VARCHAR(100) NOT NULL,
    Email VARCHAR(100) NOT NULL,
    DateOfBirth DATE NOT NULL,
    City_ID INT,
    Avatar VARCHAR(300) NOT NULL,
    Description VARCHAR(500) NOT NULL,
    Phone VARCHAR(10) NOT NULL,
    Degree VARCHAR(45) NOT NULL,
    Major VARCHAR(45) NOT NULL,
    Sex VARCHAR(45) NOT NULL,
    User_ID INT NOT NULL,
    IsDeleted BOOLEAN NOT NULL DEFAULT 0,
    FOREIGN KEY (User_ID) REFERENCES USER(ID),
    FOREIGN KEY (City_ID) REFERENCES CITY(ID)
);

-- Tạo bảng ADMINISTRATOR
CREATE TABLE ADMINISTRATOR (
    ID INT PRIMARY KEY AUTO_INCREMENT,
    Full_Name VARCHAR(100) NOT NULL,
    Email VARCHAR(100) NOT NULL,
    IsDeleted BOOLEAN NOT NULL DEFAULT 0,
    User_ID INT NOT NULL,
    FOREIGN KEY (User_ID) REFERENCES USER(ID)
);
-- Tạo bảng CANDIDATE_COMPANY
CREATE TABLE CANDIDATE_COMPANY (
    ID INT PRIMARY KEY AUTO_INCREMENT,
    Candidate_ID INT,
    Company_ID INT,
    FOREIGN KEY (Candidate_ID) REFERENCES CANDIDATE(ID),
    FOREIGN KEY (Company_ID) REFERENCES COMPANY(ID)
);

-- Tạo bảng JOB
CREATE TABLE JOB (
    ID INT PRIMARY KEY AUTO_INCREMENT,
    Company_ID INT NOT NULL,
    Name VARCHAR(100) NOT NULL,
    Description VARCHAR(100) NOT NULL,
    SalaryFrom INT NOT NULL,
    SalaryTo INT NOT NULL,
    AgeFrom INT NOT NULL,
    AgeTo INT NOT NULL,
    EndDate DATE NOT NULL,
    CreateDate DATE NOT NULL,
    Quantity INT NOT NULL,
    IsChecked BOOLEAN NOT NULL,
    DegreeRequired VARCHAR(100) NOT NULL,
    IsDeleted BOOLEAN NOT NULL DEFAULT 0,
    SexRequired VARCHAR(100) NOT NULL,
    ProbationaryPriod INT NOT NULL,
    Benefit VARCHAR(100) NOT NULL,
    Position VARCHAR(100) NOT NULL,
    Type VARCHAR(100) NOT NULL,
    City_ID INT,
    Address VARCHAR(100) NOT NULL,
    ExperienceRequired INT NOT NULL,
    JobRequired VARCHAR(100) NOT NULL,
	Candidate_Company_ID INT NOT NULL,
	FOREIGN KEY (Candidate_Company_ID) REFERENCES CANDIDATE_COMPANY(ID),
    FOREIGN KEY (Company_ID) REFERENCES COMPANY(ID),
    FOREIGN KEY (City_ID) REFERENCES CITY(ID)
);

-- Tạo bảng MAJOR
CREATE TABLE MAJOR (
    ID INT PRIMARY KEY AUTO_INCREMENT,
    Name VARCHAR(100) NOT NULL
);

-- Tạo bảng JOB_MAJOR
CREATE TABLE JOB_MAJOR (
    ID INT PRIMARY KEY AUTO_INCREMENT,
    Job_ID INT NOT NULL,
    Major_ID INT NOT NULL,
    Point INT NOT NULL,
    FOREIGN KEY (Job_ID) REFERENCES JOB(ID),
    FOREIGN KEY (Major_ID) REFERENCES MAJOR(ID)
);

-- Tạo bảng CURRICULUM_VITAE
CREATE TABLE CURRICULUM_VITAE (
    ID INT PRIMARY KEY AUTO_INCREMENT,
    CareerGoals VARCHAR(100) NOT NULL,
    DegreeDetail VARCHAR(100) NOT NULL,
    ExperienceDetail VARCHAR(100) NOT NULL,
    Skill VARCHAR(100) NOT NULL,
    ForeignLanguage VARCHAR(100) NOT NULL,
    Candidate_ID INT NOT NULL,
    CV_Link VARCHAR(100) NOT NULL,
    Is_Deleted BOOLEAN NOT NULL DEFAULT 0,
    FOREIGN KEY (Candidate_ID) REFERENCES CANDIDATE(ID)
);

-- Tạo bảng CANDIDATE_JOB
CREATE TABLE CANDIDATE_JOB (
    ID INT PRIMARY KEY AUTO_INCREMENT,
    Candidate_ID INT,
    Job_ID INT,
    CV_ID INT,
    AppliedDate DATE,
    IsLiked BOOLEAN DEFAULT NULL,
    IsApplied BOOLEAN DEFAULT NULL,
    FOREIGN KEY (Candidate_ID) REFERENCES CANDIDATE(ID),
    FOREIGN KEY (Job_ID) REFERENCES JOB(ID),
    FOREIGN KEY (CV_ID) REFERENCES CURRICULUM_VITAE(ID)
);

-- Tạo bảng COMMENT
CREATE TABLE COMMENT (
    ID INT PRIMARY KEY AUTO_INCREMENT,
    Candidate_ID INT,
    Company_ID INT,
    Rating INT CHECK (Rating >= 0 AND Rating <= 5),
    Assessment VARCHAR(200) NOT NULL,
    CreatedDate DATE NOT NULL,
    FOREIGN KEY (Candidate_ID) REFERENCES CANDIDATE(ID),
    FOREIGN KEY (Company_ID) REFERENCES COMPANY(ID)
);



-- Thêm dữ liệu cho bảng CITY
INSERT INTO CITY (CityName) VALUES ('Hanoi');
INSERT INTO CITY (CityName) VALUES ('Ho Chi Minh City');

-- Thêm dữ liệu cho bảng ROLE
INSERT INTO ROLE (Name) VALUES ('Admin');
INSERT INTO ROLE (Name) VALUES ('User');
INSERT INTO ROLE (Name) VALUES ('Candidate');
